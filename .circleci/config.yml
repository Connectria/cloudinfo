# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.10

    working_directory: /go/src/github.com/banzaicloud/productinfo
    steps:
      - checkout

      - restore_cache:
          keys:
          - gopkg-v1-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          - gopkg-v1-{{ .Branch }}
          - gopkg-v1-master
          - gopkg-v1

      - run:
          name: Install dependencies
          command: make vendor

      - save_cache:
          key: gopkg-v1-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
          - vendor/


      - run:
          name: Install license checker
          command: curl https://raw.githubusercontent.com/goph/licensei/master/install.sh | bash -s v0.0.6

      - restore_cache:
          keys:
          - licensei-v1-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          - licensei-v1-{{ .Branch }}
          - licensei-v1-master
          - licensei-v1

      - run:
          name: Download license information for dependencies
          command: bin/licensei cache

      - save_cache:
          key: licensei-v1-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
            - .licensei.cache

      - run:
          name: Check dependency licenses
          command: bin/licensei check

      - run:
          name: Build
          command:
              make build
      - run:
          name: Run go vet
          command:
              make vet
      - run:
          name: Run fmt
          command:
              make check-fmt
      - run:
          name: Run golint
          command:
              make lint
      - run:
          name: Run misspell
          command:
              make check-misspell
      - run:
          name: Run ineffassign
          command:
              make ineffassign
      - run:
          name: Run gocyclo
          command:
              make gocyclo
      - run:
          name: Run tests
          command:
              make test
      - run:
          name: Generate test reports
          command:
              make go-junit-report
          when: always

      - store_test_results:
          path: test-results/
      - store_artifacts:
          path: test-results/

